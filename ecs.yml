imports:
    - { resource: 'packages/EasyCodingStandard/config/psr2.yml' }
    - { resource: 'packages/EasyCodingStandard/config/php71.yml' }
    - { resource: 'packages/EasyCodingStandard/config/clean-code.yml' }
    - { resource: 'packages/EasyCodingStandard/config/symplify.yml' }
    - { resource: 'packages/EasyCodingStandard/config/common.yml' }
    - { resource: 'packages/EasyCodingStandard/config/psr12.yml' }

services:
    Symplify\CodingStandard\Fixer\Order\MethodOrderByTypeFixer:
        method_order_by_type:
            PhpCsFixer\Fixer\FixerInterface:
                - 'getDefinition'
                - 'isCandidate'
                - 'fix'
                - 'getPriority'
                - 'getName'
                - 'isRisky'
                - 'supports'

    Symplify\CodingStandard\Sniffs\CleanCode\CognitiveComplexitySniff:
        maxCognitiveComplexity: 8

    # class should be Abstact or Final
    SlamCsFixer\FinalInternalClassFixer: ~

    Symplify\CodingStandard\Sniffs\Naming\ClassNameSuffixByParentSniff:
        extraParentTypesToSuffixes:
            - 'FileDecorator'

    Symplify\CodingStandard\Sniffs\DependencyInjection\NoClassInstantiationSniff:
        extraAllowedClasses:
            - 'Symplify\EasyCodingStandard\Error\Error'
            - 'Symplify\EasyCodingStandard\Yaml\*'
            - 'Symplify\PackageBuilder\*'
            - 'phpDocumentor\Reflection\Fqsen'
            - 'PharIo\Version\Version'
            # Symfony\DependencyInjection
            - 'Symfony\Component\DependencyInjection\ContainerBuilder'
            - 'Symfony\Component\DependencyInjection\ParameterBag\ParameterBag'
            - 'Symfony\Component\*\Exception\*'
            - 'Symfony\Component\Config\Loader\*'

parameters:
    exclude_checkers:
        # exclude from psr12.yml
        - 'PhpCsFixer\Fixer\PhpTag\BlankLineAfterOpeningTagFixer'
        - 'PhpCsFixer\Fixer\Operator\UnaryOperatorSpacesFixer'
    exclude_files:
        # tests
        - 'packages/PackageBuilder/tests/Reflection/Source/SomeClassWithPrivateMethods.php'
        # files
        - 'packages/CodingStandard/tests/Sniffs/DependencyInjection/NoClassInstantiation/Source/EntityClass.php'
        - 'packages/EasyCodingStandard/packages/SniffRunner/tests/Application/FileProcessorSource/ReferenceUsedNamesOnlySniff/FileProvingNeedOfProperSupportOfChangesets*.php'

    skip:
        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff:
            - '*packages/CodingStandard/src/Sniffs/*/*Sniff.php'
            - 'packages/EasyCodingStandard/packages/SniffRunner/src/File/File.php'
            - 'packages/Statie/packages/Latte/src/Loader/ArrayLoader.php'
            - 'packages/Statie/src/Configuration/Configuration.php'

        PhpCsFixer\Fixer\PhpUnit\PhpUnitStrictFixer:
            - 'packages/EasyCodingStandard/tests/Indentation/IndentationTest.php'

        Symplify\CodingStandard\Fixer\Php\ClassStringToClassConstantFixer:
            # name parts, not classes
            - 'packages/CodingStandard/src/Sniffs/DependencyInjection/NoClassInstantiationSniff.php'
            # "Exception" is string part of the name
            - 'packages/CodingStandard/src/Sniffs/Naming/ClassNameSuffixByParentSniff.php'
            # class might not exist
            - '*packages/EasyCodingStandard/src/DependencyInjection/CompilerPass/*CompilerPass.php'

        Symplify\CodingStandard\Sniffs\DependencyInjection\NoClassInstantiationSniff:
            # static helper
            - 'packages/PackageBuilder/src/Console/ThrowableRenderer.php'
            # todo: decouple later
            - 'packages/TokenRunner/src/Wrapper/FixerWrapper/AbstractVariableWrapper.php'
            # cheap dependency injection
            - 'packages/PackageBuilder/src/Yaml/ParameterMergingYamlLoader.php'
            # poor constructor injection for non-container approach
            - 'packages/EasyCodingStandard/src/Yaml/FileLoader/CheckerTolerantYamlFileLoader.php'
            - 'packages/EasyCodingStandard/src/Yaml/CheckerServiceParametersShifter.php'

        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff.MissingParameterTypeHint:
            # respect 3rd party code typehint
            - 'packages/EasyCodingStandard/src/Yaml/FileLoader/CheckerTolerantYamlFileLoader.php'
            - 'packages/PackageBuilder/src/Yaml/FileLoader/AbstractParameterImportsYamlFileLoader.php'
            - 'packages/PackageBuilder/tests/Yaml/ParameterInImportResolverSource/ImportParameterAwareYamlFileLoader.php'

        SlevomatCodingStandard\Sniffs\Exceptions\ReferenceThrowableOnlySniff.ReferencedGeneralException:
            # intentionally "Exception" value
            - 'packages/CodingStandard/src/Sniffs/Architecture/ExplicitExceptionSniff.php'
            # intentionally "Exception" value
            - 'packages/PackageBuilder/tests/Console/ThrowableRendererTest.php'

        Symplify\CodingStandard\Sniffs\CleanCode\ForbiddenStaticFunctionSniff:
            - 'packages/PackageBuilder/src/Finder/SymfonyFileInfoFactory.php' # @todo test and cover relative path againts getcwd()
            - 'packages/PackageBuilder/src/Console/Command/CommandNaming.php'
            - 'packages/PackageBuilder/src/Configuration/ConfigFileFinder.php'
            - 'packages/PackageBuilder/src/Composer/VendorDirProvider.php'

        Symplify\CodingStandard\Sniffs\CleanCode\CognitiveComplexitySniff:
            # 3rd party code copy-pasted; kept as is for easier comparison to original
            - 'packages/PackageBuilder/src/Yaml/ParametersMerger.php'

        PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\AssignmentInConditionSniff.FoundInWhileCondition: ~

        Symplify\CodingStandard\Sniffs\CleanCode\ForbiddenReferenceSniff:
            # reference for reflection of method with reference
            - 'packages/PackageBuilder/src/Reflection/PrivatesCaller.php'

        Symplify\CodingStandard\Sniffs\Debug\CommentedOutCodeSniff.Found:
            # useful comments
            - 'packages/LatteToTwigConverter/src/CaseConverter/*CaseConverter.php'
